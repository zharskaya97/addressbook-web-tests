package ru.stqa.pft.addressbook.tests;// Generated by Selenium IDE

import org.testng.annotations.Test;
import ru.stqa.pft.addressbook.model.ContactData;
import ru.stqa.pft.addressbook.model.Contacts;

import java.io.File;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.MatcherAssert.assertThat;

public class ContactCreateTest extends TestBase {

    @Test
    public void testCreateContact() {
        app.goTo().homePage();
        Contacts before = app.contact().allContact();
        ContactData contact = new ContactData().withFirstname("test1").withLastname("test2").withGroup("group1");
        app.contact().create(contact);
        assertThat(app.contact().countC(), equalTo(before.size() + 1));
        Contacts after = app.contact().allContact();
        assertThat(after, equalTo(
                before.withAdded(contact.withId(after.stream().mapToInt((g) -> g.getId()).max().getAsInt()))));
    }
@Test
public void testCreateContact_withPhoto() {
    app.goTo().homePage();
    app.contact().initContactCreation();
    File photo = new File("src/test/resources/UnnPfCYmlns.jpg");
    app.contact().fillContactForm(
            new ContactData().withFirstname("test133").withLastname("test233").withGroup("group1").withPhoto(photo), true);
    app.contact().submitContactCreation();
    app.contact().returnToHomePage();
}

    @Test
    public void testBadCreateContact() {
        app.goTo().homePage();
        Contacts before = app.contact().allContact();
        File photo = new File("src/test/resources/UnnPfCYmlns.jpg");
        ContactData contact = new ContactData().withFirstname("test1'").withLastname("test2").withPhoto(photo);
        app.contact().create(contact);
        assertThat(app.contact().countC(), equalTo(before.size()));
        Contacts after = app.contact().allContact();
        assertThat(after, equalTo(before));
    }
}
